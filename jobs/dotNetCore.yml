parameters:
  pool: 'win1803'
  cleanCheckout: 'false'
  buildConfiguration: 'Release'
  sonarCloudProjectKey: ''
  sonarCloudextraProperties: ''
  coverletCoverageExclusions: ''
  solutionType: ''
  dotNetCoreVersion: ''

jobs:
- job:
  displayName: 'Build & Test .Net Core Console app'
  pool:
    vmImage: ${{ parameters.pool }}

  # Reference templae for setting up build tools
  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: ${{ parameters.cleanCheckout }}  # whether to fetch clean each time

# Runs common steps - gitVersion, Nuget
  - template: ../templates/common/common.yml

# Restore NuGet packages and build VS solution
  - template: ../templates/vsBuild/dotnetBuild.yml
    parameters:
      buildConfiguration: '${{ parameters.buildConfiguration }}'
      vstsFeedId: '${{ parameters.vstsFeedId }}'

  # Executes tests projects that do not contain acceptance in the name
  - template: ../templates/tests/runAllTests.yml
    parameters:
      buildConfiguration: '${{ parameters.buildConfiguration }}'
      integrationTestsAppSettingsTransform: '${{ parameters.integrationTestsAppSettingsTransform }}'
      coverletCoverageExclusions: '${{ parameters.coverletCoverageExclusions }}'
      dalWorkingDirectory: '${{ parameters.dalWorkingDirectory }}'

  # Executes the Donet CLI publish command to package the application
  - template: ../templates/publishArtifacts/dotnetPublish.yml
    parameters:
      buildConfiguration: '${{ parameters.buildConfiguration }}'
      apiDirectory: '${{ parameters.apiDirectory }}'

# Publish artifacts
  - template: ../templates/publishArtifacts/publishArtifacts.yml
    parameters:
      dalWorkingDirectory: '${{ parameters.dalWorkingDirectory }}'
      buildConfiguration: '${{ parameters.buildConfiguration }}'
