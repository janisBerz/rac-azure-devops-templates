parameters:
  pool: 'windows-latest'
  azureSubscriptionName: 'DevTest'
  webAppName: ''
  functionName: ''

stages:
- stage: Deployment_Dev
  jobs:
  - deployment: deployment_dev
    displayName: 'Dev'
    pool:
      vmImage: '${{ parameters.pool }}'
    environment: 'dev'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../templates/deployment/deployment.yml
            parameters:
              azureSubscriptionName: '${{ parameters.azureSubscriptionName }}'
              WebAppName: '${{ parameters.WebAppName }}'
              functionName: '${{ parameters.functionName }}'

- stage: Deployment_UAT
  jobs:
  - deployment: deployment_uat
    displayName: 'UAT'
    pool:
      vmImage: '${{ parameters.pool }}'
    environment: 'test'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../templates/deployment/deployment.yml
            parameters:
              azureSubscriptionName: '${{ parameters.azureSubscriptionName }}'
              WebAppName: '${{ parameters.WebAppName }}'
              functionName: '${{ parameters.functionName }}'

- stage: Deployment_Prod
  jobs:
  - deployment: deployment_prod
    displayName: 'Prod'
    pool:
      vmImage: '${{ parameters.pool }}'
    environment: 'prod'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../templates/deployment/deployment.yml
            parameters:
              azureSubscriptionName: '${{ parameters.azureSubscriptionName }}'

              WebAppName: '${{ parameters.WebAppName }}'
              functionName: '${{ parameters.functionName }}'